%h2.mb-4
  = @wallet.address
.row
  .col-3
    = select_tag 'network', options_for_select(Network.where(user: current_user).pluck(:network_name, :chain_id), params[:chain_id].presence || 56), class: 'form-control mb-3'
  .col-3
    %button#refresh
      Refresh
    %a{href: wallets_path, class: 'btn btn-primary'}
      Wallets
.row.mb-3
  .col-12
    .form-check
      = check_box_tag :not_show_zero, 'true', params[:not_show_zero] == 'true', class: 'form-check-input'
      %label.form-check-label Do not show Zero account
- @tokens.each do |token|
  .card.mb-2
    .row.no-gutters
      .col-2
        %img.card-img{:alt => token.contract_name, src: token.logo_url, style: 'padding: 20px'}/
      .col-8
        .card-body
          %h5.card-title
            = token.contract_ticker_symbol
          %p.card-text
            %strong
              Contract Name:
            = token.contract_name
            %br
            %strong
              Contract Address:
            = token.contract_address
            %br
            %strong
              Balance:
            = token.balance.ceil(2).to_s + ' USD'
          %a.btn.btn-primary{:href => "https://bscscan.com/address/#{@wallet.address}", target: '_blank'} View on BSCscan

:javascript
  $('#network').on('change', function() {
    let queryParams = new URLSearchParams(window.location.search)
    queryParams.set('chain_id', $(this).val())
    history.replaceState(null, null, "?"+queryParams.toString())
    window.location.href = window.location.origin + window.location.pathname + '?' + queryParams.toString()
  })

  $('#not_show_zero').on('change', function() {
    let queryParams = new URLSearchParams(window.location.search)
    queryParams.set('not_show_zero', $(this).is(':checked'))
    window.location.href = window.location.origin + window.location.pathname + '?' + queryParams.toString()
  })

  $('#refresh').on('click', function() {
    $.ajax({
      url: '/refresh?wallet_id=' + "#{params[:id]}" + '&chain_id=' + "#{params[:chain_id]}",
      type: 'GET',
      success: function () {
        location.reload()
      },
      async: false
    })
  })
